diff --git a/config.def.h b/config.def.h
index a4f7c13..c636f71 100644
--- a/config.def.h
+++ b/config.def.h
@@ -12,19 +12,14 @@ static const float fullscreen_bg[]         = {0.1, 0.1, 0.1, 1.0};
 static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
 
 static const Rule rules[] = {
-	/* app_id     title       tags mask     isfloating   monitor */
-	/* examples:
-	{ "Gimp",     NULL,       0,            1,           -1 },
-	*/
-	{ "firefox",  NULL,       1 << 8,       0,           -1 },
+	/* app_id   title       tags mask     isfloating   monitor */
+	{ "float",  NULL,       1 << 8,       0,           -1 },
 };
 
 /* layout(s) */
 static const Layout layouts[] = {
 	/* symbol     arrange function */
 	{ "[]=",      tile },
-	{ "><>",      NULL },    /* no layout function means floating behavior */
-	{ "[M]",      monocle },
 };
 
 /* monitors */
@@ -92,7 +87,7 @@ LIBINPUT_CONFIG_TAP_MAP_LMR -- 1/2/3 finger tap maps to left/middle/right
 static const enum libinput_config_tap_button_map button_map = LIBINPUT_CONFIG_TAP_MAP_LRM;
 
 /* If you want to use the windows key for MODKEY, use WLR_MODIFIER_LOGO */
-#define MODKEY WLR_MODIFIER_ALT
+#define MODKEY WLR_MODIFIER_LOGO
 
 #define TAGKEYS(KEY,SKEY,TAG) \
 	{ MODKEY,                    KEY,            view,            {.ui = 1 << TAG} }, \
@@ -104,45 +99,50 @@ static const enum libinput_config_tap_button_map button_map = LIBINPUT_CONFIG_TA
 #define SHCMD(cmd) { .v = (const char*[]){ "/bin/sh", "-c", cmd, NULL } }
 
 /* commands */
-static const char *termcmd[] = { "foot", NULL };
-static const char *menucmd[] = { "bemenu-run", NULL };
+static const char *menu_cmd[] = { "dmenu", NULL };
+static const char *term_cmd[] = { "st", NULL };
+static const char *browser_cmd[] = { "qutebrowser", NULL };
+static const char *mutt_cmd[] = { "st", "-e", "neomutt", NULL };
+static const char *mailsync_cmd[] = { "st", "-c", "float", "-g", "80x50", "-e", "mailsync", NULL };
+static const char *emacs_cmd[] = { "emacsclient", "-c" "-a", "emacs", NULL };
+static const char *keymap_cmd[] = { "switchkbl", NULL };
 
 static const Key keys[] = {
 	/* Note that Shift changes certain key codes: c -> C, 2 -> at, etc. */
-	/* modifier                  key                 function        argument */
-	{ MODKEY,                    XKB_KEY_p,          spawn,          {.v = menucmd} },
-	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Return,     spawn,          {.v = termcmd} },
-	{ MODKEY,                    XKB_KEY_j,          focusstack,     {.i = +1} },
-	{ MODKEY,                    XKB_KEY_k,          focusstack,     {.i = -1} },
-	{ MODKEY,                    XKB_KEY_i,          incnmaster,     {.i = +1} },
-	{ MODKEY,                    XKB_KEY_d,          incnmaster,     {.i = -1} },
-	{ MODKEY,                    XKB_KEY_h,          setmfact,       {.f = -0.05} },
-	{ MODKEY,                    XKB_KEY_l,          setmfact,       {.f = +0.05} },
-	{ MODKEY,                    XKB_KEY_Return,     zoom,           {0} },
-	{ MODKEY,                    XKB_KEY_Tab,        view,           {0} },
-	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_C,          killclient,     {0} },
-	{ MODKEY,                    XKB_KEY_t,          setlayout,      {.v = &layouts[0]} },
-	{ MODKEY,                    XKB_KEY_f,          setlayout,      {.v = &layouts[1]} },
-	{ MODKEY,                    XKB_KEY_m,          setlayout,      {.v = &layouts[2]} },
-	{ MODKEY,                    XKB_KEY_space,      setlayout,      {0} },
-	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_space,      togglefloating, {0} },
-	{ MODKEY,                    XKB_KEY_e,         togglefullscreen, {0} },
-	{ MODKEY,                    XKB_KEY_0,          view,           {.ui = ~0} },
-	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_parenright, tag,            {.ui = ~0} },
-	{ MODKEY,                    XKB_KEY_comma,      focusmon,       {.i = WLR_DIRECTION_LEFT} },
-	{ MODKEY,                    XKB_KEY_period,     focusmon,       {.i = WLR_DIRECTION_RIGHT} },
-	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_less,       tagmon,         {.i = WLR_DIRECTION_LEFT} },
-	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_greater,    tagmon,         {.i = WLR_DIRECTION_RIGHT} },
-	TAGKEYS(          XKB_KEY_1, XKB_KEY_exclam,                     0),
-	TAGKEYS(          XKB_KEY_2, XKB_KEY_at,                         1),
-	TAGKEYS(          XKB_KEY_3, XKB_KEY_numbersign,                 2),
-	TAGKEYS(          XKB_KEY_4, XKB_KEY_dollar,                     3),
-	TAGKEYS(          XKB_KEY_5, XKB_KEY_percent,                    4),
-	TAGKEYS(          XKB_KEY_6, XKB_KEY_asciicircum,                5),
-	TAGKEYS(          XKB_KEY_7, XKB_KEY_ampersand,                  6),
-	TAGKEYS(          XKB_KEY_8, XKB_KEY_asterisk,                   7),
-	TAGKEYS(          XKB_KEY_9, XKB_KEY_parenleft,                  8),
-	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Q,          quit,           {0} },
+	/* modifier                  key                 function          argument */
+	{ MODKEY,                    XKB_KEY_d,          spawn,            {.v = menu_cmd} },
+	{ MODKEY,                    XKB_KEY_Return,     spawn,            {.v = term_cmd} },
+	{ MODKEY,                    XKB_KEY_b,          spawn,            {.v = browser_cmd} },
+	{ MODKEY,                    XKB_KEY_m,          spawn,            {.v = mutt_cmd} },
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_M,          spawn,            {.v = mailsync_cmd} },
+	{ MODKEY,                    XKB_KEY_e,          spawn,            {.v = emacs_cmd} },
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_K,          spawn,            {.v = keymap_cmd} },
+	{ MODKEY,                    XKB_KEY_Down,       focusstack,       {.i = +1} },
+	{ MODKEY,                    XKB_KEY_Up,         focusstack,       {.i = -1} },
+	{ MODKEY,                    XKB_KEY_Left,       setmfact,         {.f = -0.05} },
+	{ MODKEY,                    XKB_KEY_Right,      setmfact,         {.f = +0.05} },
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Left,      incnmaster,       {.i = +1} },
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Right,       incnmaster,       {.i = -1} },
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_Q,          killclient,       {0} },
+	{ MODKEY,                    XKB_KEY_space,      setlayout,        {0} },
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_space,      togglefloating,   {0} },
+	{ MODKEY,                    XKB_KEY_f,          togglefullscreen, {0} },
+	{ MODKEY,                    XKB_KEY_0,          view,             {.ui = ~0} },
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_parenright, tag,              {.ui = ~0} },
+	{ MODKEY,                    XKB_KEY_comma,      focusmon,         {.i = WLR_DIRECTION_LEFT} },
+	{ MODKEY,                    XKB_KEY_period,     focusmon,         {.i = WLR_DIRECTION_RIGHT} },
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_less,       tagmon,           {.i = WLR_DIRECTION_LEFT} },
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_greater,    tagmon,           {.i = WLR_DIRECTION_RIGHT} },
+	TAGKEYS(          XKB_KEY_1, XKB_KEY_exclam,                       0),
+	TAGKEYS(          XKB_KEY_2, XKB_KEY_at,                           1),
+	TAGKEYS(          XKB_KEY_3, XKB_KEY_numbersign,                   2),
+	TAGKEYS(          XKB_KEY_4, XKB_KEY_dollar,                       3),
+	TAGKEYS(          XKB_KEY_5, XKB_KEY_percent,                      4),
+	TAGKEYS(          XKB_KEY_6, XKB_KEY_asciicircum,                  5),
+	TAGKEYS(          XKB_KEY_7, XKB_KEY_ampersand,                    6),
+	TAGKEYS(          XKB_KEY_8, XKB_KEY_asterisk,                     7),
+	TAGKEYS(          XKB_KEY_9, XKB_KEY_parenleft,                    8),
+	{ MODKEY|WLR_MODIFIER_SHIFT, XKB_KEY_C,          quit,             {0} },
 
 	/* Ctrl-Alt-Backspace and Ctrl-Alt-Fx used to be handled by X server */
 	{ WLR_MODIFIER_CTRL|WLR_MODIFIER_ALT,XKB_KEY_Terminate_Server, quit, {0} },
